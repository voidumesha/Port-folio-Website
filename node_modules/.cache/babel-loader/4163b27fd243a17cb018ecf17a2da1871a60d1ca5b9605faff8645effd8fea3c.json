{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction getUnitOffset(size) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var offsetStr = \"\".concat(offset);\n  var cells = offsetStr.match(/^(.*)\\%$/);\n  if (cells) {\n    return size * (parseFloat(cells[1]) / 100);\n  }\n  return parseFloat(offsetStr);\n}\nfunction getNumberOffset(rect, offset) {\n  var _ref = offset || [],\n    _ref2 = _slicedToArray(_ref, 2),\n    offsetX = _ref2[0],\n    offsetY = _ref2[1];\n  return [getUnitOffset(rect.width, offsetX), getUnitOffset(rect.height, offsetY)];\n}\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n  var prevFlipRef = React.useRef({});\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n  if (!open) {\n    resetFlipCache();\n  }\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      var getIntersectionVisibleArea = function getIntersectionVisibleArea(offsetX, offsetY) {\n        var area = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : visibleArea;\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, area.left);\n        var visibleT = Math.max(t, area.top);\n        var visibleR = Math.min(r, area.right);\n        var visibleB = Math.min(b, area.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      };\n      var syncNextPopupPosition = function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      };\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleRegion = {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      var scrollRegion = {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      };\n      var htmlRegion = placementInfo.htmlRegion;\n      var VISIBLE = 'visible';\n      var VISIBLE_FIRST = 'visibleFirst';\n      if (htmlRegion !== 'scroll' && htmlRegion !== VISIBLE_FIRST) {\n        htmlRegion = VISIBLE;\n      }\n      var isVisibleFirst = htmlRegion === VISIBLE_FIRST;\n      var scrollRegionArea = getVisibleArea(scrollRegion, scrollerList);\n      var visibleRegionArea = getVisibleArea(visibleRegion, scrollerList);\n      var visibleArea = htmlRegion === VISIBLE ? visibleRegionArea : scrollRegionArea;\n\n      // When set to `visibleFirst`,\n      // the check `adjust` logic will use `visibleRegion` for check first.\n      var adjustCheckVisibleArea = isVisibleFirst ? visibleRegionArea : visibleArea;\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _getNumberOffset = getNumberOffset(popupRect, offset),\n        _getNumberOffset2 = _slicedToArray(_getNumberOffset, 2),\n        popupOffsetX = _getNumberOffset2[0],\n        popupOffsetY = _getNumberOffset2[1];\n      var _getNumberOffset3 = getNumberOffset(targetRect, targetOffset),\n        _getNumberOffset4 = _slicedToArray(_getNumberOffset3, 2),\n        targetOffsetX = _getNumberOffset4[0],\n        targetOffsetY = _getNumberOffset4[1];\n      targetRect.x -= targetOffsetX;\n      targetRect.y -= targetOffsetY;\n\n      // Points\n      var _ref3 = placementInfo.points || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        popupPoint = _ref4[0],\n        targetPoint = _ref4[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // As `visibleFirst`, we prepare this for check\n      var originIntersectionRecommendArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY, visibleRegionArea);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > adjustCheckVisibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        var newVisibleArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY);\n        var newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        newVisibleArea > originIntersectionVisibleArea || newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < adjustCheckVisibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        var _newVisibleArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY);\n        var _newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea > originIntersectionVisibleArea || _newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > adjustCheckVisibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        var _newVisibleArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea2 > originIntersectionVisibleArea || _newVisibleArea2 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea2 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < adjustCheckVisibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        var _newVisibleArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea3 > originIntersectionVisibleArea || _newVisibleArea3 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea3 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleRegionArea.left) {\n          nextOffsetX -= nextPopupX - visibleRegionArea.left;\n          if (targetRect.x + targetWidth < visibleRegionArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleRegionArea.right) {\n          nextOffsetX -= nextPopupRight - visibleRegionArea.right;\n          if (targetRect.x > visibleRegionArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleRegionArea.top) {\n          nextOffsetY -= nextPopupY - visibleRegionArea.top;\n          if (targetRect.y + targetHeight < visibleRegionArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleRegionArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleRegionArea.bottom;\n          if (targetRect.y > visibleRegionArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}","map":{"version":3,"names":["_objectSpread","_slicedToArray","isDOM","isVisible","useEvent","useLayoutEffect","React","collectScroller","getVisibleArea","getWin","toNum","getUnitOffset","size","offset","arguments","length","undefined","offsetStr","concat","cells","match","parseFloat","getNumberOffset","rect","_ref","_ref2","offsetX","offsetY","width","height","splitPoints","points","getAlignPoint","topBottom","leftRight","x","y","reversePoints","index","reverseMap","t","b","l","r","map","point","i","join","useAlign","open","popupEle","target","placement","builtinPlacements","popupAlign","onPopupAlign","_React$useState","useState","ready","arrowX","arrowY","scaleX","scaleY","align","_React$useState2","offsetInfo","setOffsetInfo","alignCountRef","useRef","scrollerList","useMemo","prevFlipRef","resetFlipCache","current","onAlign","getIntersectionVisibleArea","area","visibleArea","popupRect","popupWidth","popupHeight","visibleL","Math","max","left","visibleT","top","visibleR","min","right","visibleB","bottom","syncNextPopupPosition","nextPopupY","nextOffsetY","nextPopupBottom","nextPopupX","nextOffsetX","nextPopupRight","popupElement","originLeft","style","originTop","doc","ownerDocument","win","placementInfo","targetRect","Array","isArray","getBoundingClientRect","_win$getComputedStyle","getComputedStyle","_doc$documentElement","documentElement","clientWidth","clientHeight","scrollWidth","scrollHeight","scrollTop","scrollLeft","targetHeight","targetWidth","visibleRegion","scrollRegion","htmlRegion","VISIBLE","VISIBLE_FIRST","isVisibleFirst","scrollRegionArea","visibleRegionArea","adjustCheckVisibleArea","_scaleX","round","_scaleY","targetOffset","_getNumberOffset","_getNumberOffset2","popupOffsetX","popupOffsetY","_getNumberOffset3","_getNumberOffset4","targetOffsetX","targetOffsetY","_ref3","_ref4","popupPoint","targetPoint","targetPoints","popupPoints","targetAlignPoint","popupAlignPoint","nextAlignInfo","originIntersectionVisibleArea","originIntersectionRecommendArea","targetAlignPointTL","popupAlignPointTL","targetAlignPointBR","popupAlignPointBR","overflow","adjustX","adjustY","shiftX","shiftY","supportAdjust","val","needAdjustY","sameTB","bt","tmpNextOffsetY","newVisibleArea","newVisibleRecommendArea","tb","_tmpNextOffsetY","_newVisibleArea","_newVisibleRecommendArea","needAdjustX","sameLR","rl","tmpNextOffsetX","_newVisibleArea2","_newVisibleRecommendArea2","lr","_tmpNextOffsetX","_newVisibleArea3","_newVisibleRecommendArea3","numShiftX","numShiftY","popupLeft","popupRight","popupTop","popupBottom","targetLeft","targetRight","targetTop","targetBottom","maxLeft","minRight","xCenter","nextArrowX","maxTop","minBottom","yCenter","nextArrowY","triggerAlign","id","Promise","resolve","then","resetReady","ori"],"sources":["C:/Users/umesh/Downloads/personal-portfolio-master/personal-portfolio-master/node_modules/@rc-component/trigger/es/hooks/useAlign.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { isDOM } from \"rc-util/es/Dom/findDOMNode\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport useEvent from \"rc-util/es/hooks/useEvent\";\nimport useLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport * as React from 'react';\nimport { collectScroller, getVisibleArea, getWin, toNum } from \"../util\";\nfunction getUnitOffset(size) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var offsetStr = \"\".concat(offset);\n  var cells = offsetStr.match(/^(.*)\\%$/);\n  if (cells) {\n    return size * (parseFloat(cells[1]) / 100);\n  }\n  return parseFloat(offsetStr);\n}\nfunction getNumberOffset(rect, offset) {\n  var _ref = offset || [],\n    _ref2 = _slicedToArray(_ref, 2),\n    offsetX = _ref2[0],\n    offsetY = _ref2[1];\n  return [getUnitOffset(rect.width, offsetX), getUnitOffset(rect.height, offsetY)];\n}\nfunction splitPoints() {\n  var points = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return [points[0], points[1]];\n}\nfunction getAlignPoint(rect, points) {\n  var topBottom = points[0];\n  var leftRight = points[1];\n  var x;\n  var y;\n\n  // Top & Bottom\n  if (topBottom === 't') {\n    y = rect.y;\n  } else if (topBottom === 'b') {\n    y = rect.y + rect.height;\n  } else {\n    y = rect.y + rect.height / 2;\n  }\n\n  // Left & Right\n  if (leftRight === 'l') {\n    x = rect.x;\n  } else if (leftRight === 'r') {\n    x = rect.x + rect.width;\n  } else {\n    x = rect.x + rect.width / 2;\n  }\n  return {\n    x: x,\n    y: y\n  };\n}\nfunction reversePoints(points, index) {\n  var reverseMap = {\n    t: 'b',\n    b: 't',\n    l: 'r',\n    r: 'l'\n  };\n  return points.map(function (point, i) {\n    if (i === index) {\n      return reverseMap[point] || 'c';\n    }\n    return point;\n  }).join('');\n}\nexport default function useAlign(open, popupEle, target, placement, builtinPlacements, popupAlign, onPopupAlign) {\n  var _React$useState = React.useState({\n      ready: false,\n      offsetX: 0,\n      offsetY: 0,\n      arrowX: 0,\n      arrowY: 0,\n      scaleX: 1,\n      scaleY: 1,\n      align: builtinPlacements[placement] || {}\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    offsetInfo = _React$useState2[0],\n    setOffsetInfo = _React$useState2[1];\n  var alignCountRef = React.useRef(0);\n  var scrollerList = React.useMemo(function () {\n    if (!popupEle) {\n      return [];\n    }\n    return collectScroller(popupEle);\n  }, [popupEle]);\n\n  // ========================= Flip ==========================\n  // We will memo flip info.\n  // If size change to make flip, it will memo the flip info and use it in next align.\n  var prevFlipRef = React.useRef({});\n  var resetFlipCache = function resetFlipCache() {\n    prevFlipRef.current = {};\n  };\n  if (!open) {\n    resetFlipCache();\n  }\n\n  // ========================= Align =========================\n  var onAlign = useEvent(function () {\n    if (popupEle && target && open) {\n      var popupElement = popupEle;\n      var originLeft = popupElement.style.left;\n      var originTop = popupElement.style.top;\n      var doc = popupElement.ownerDocument;\n      var win = getWin(popupElement);\n\n      // Placement\n      var placementInfo = _objectSpread(_objectSpread({}, builtinPlacements[placement]), popupAlign);\n\n      // Reset first\n      popupElement.style.left = '0';\n      popupElement.style.top = '0';\n\n      // Calculate align style, we should consider `transform` case\n      var targetRect;\n      if (Array.isArray(target)) {\n        targetRect = {\n          x: target[0],\n          y: target[1],\n          width: 0,\n          height: 0\n        };\n      } else {\n        var rect = target.getBoundingClientRect();\n        targetRect = {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        };\n      }\n      var popupRect = popupElement.getBoundingClientRect();\n      var _win$getComputedStyle = win.getComputedStyle(popupElement),\n        width = _win$getComputedStyle.width,\n        height = _win$getComputedStyle.height;\n      var _doc$documentElement = doc.documentElement,\n        clientWidth = _doc$documentElement.clientWidth,\n        clientHeight = _doc$documentElement.clientHeight,\n        scrollWidth = _doc$documentElement.scrollWidth,\n        scrollHeight = _doc$documentElement.scrollHeight,\n        scrollTop = _doc$documentElement.scrollTop,\n        scrollLeft = _doc$documentElement.scrollLeft;\n      var popupHeight = popupRect.height;\n      var popupWidth = popupRect.width;\n      var targetHeight = targetRect.height;\n      var targetWidth = targetRect.width;\n\n      // Get bounding of visible area\n      var visibleRegion = {\n        left: 0,\n        top: 0,\n        right: clientWidth,\n        bottom: clientHeight\n      };\n      var scrollRegion = {\n        left: -scrollLeft,\n        top: -scrollTop,\n        right: scrollWidth - scrollLeft,\n        bottom: scrollHeight - scrollTop\n      };\n      var htmlRegion = placementInfo.htmlRegion;\n      var VISIBLE = 'visible';\n      var VISIBLE_FIRST = 'visibleFirst';\n      if (htmlRegion !== 'scroll' && htmlRegion !== VISIBLE_FIRST) {\n        htmlRegion = VISIBLE;\n      }\n      var isVisibleFirst = htmlRegion === VISIBLE_FIRST;\n      var scrollRegionArea = getVisibleArea(scrollRegion, scrollerList);\n      var visibleRegionArea = getVisibleArea(visibleRegion, scrollerList);\n      var visibleArea = htmlRegion === VISIBLE ? visibleRegionArea : scrollRegionArea;\n\n      // When set to `visibleFirst`,\n      // the check `adjust` logic will use `visibleRegion` for check first.\n      var adjustCheckVisibleArea = isVisibleFirst ? visibleRegionArea : visibleArea;\n\n      // Reset back\n      popupElement.style.left = originLeft;\n      popupElement.style.top = originTop;\n\n      // Calculate scale\n      var _scaleX = toNum(Math.round(popupWidth / parseFloat(width) * 1000) / 1000);\n      var _scaleY = toNum(Math.round(popupHeight / parseFloat(height) * 1000) / 1000);\n\n      // No need to align since it's not visible in view\n      if (_scaleX === 0 || _scaleY === 0 || isDOM(target) && !isVisible(target)) {\n        return;\n      }\n\n      // Offset\n      var offset = placementInfo.offset,\n        targetOffset = placementInfo.targetOffset;\n      var _getNumberOffset = getNumberOffset(popupRect, offset),\n        _getNumberOffset2 = _slicedToArray(_getNumberOffset, 2),\n        popupOffsetX = _getNumberOffset2[0],\n        popupOffsetY = _getNumberOffset2[1];\n      var _getNumberOffset3 = getNumberOffset(targetRect, targetOffset),\n        _getNumberOffset4 = _slicedToArray(_getNumberOffset3, 2),\n        targetOffsetX = _getNumberOffset4[0],\n        targetOffsetY = _getNumberOffset4[1];\n      targetRect.x -= targetOffsetX;\n      targetRect.y -= targetOffsetY;\n\n      // Points\n      var _ref3 = placementInfo.points || [],\n        _ref4 = _slicedToArray(_ref3, 2),\n        popupPoint = _ref4[0],\n        targetPoint = _ref4[1];\n      var targetPoints = splitPoints(targetPoint);\n      var popupPoints = splitPoints(popupPoint);\n      var targetAlignPoint = getAlignPoint(targetRect, targetPoints);\n      var popupAlignPoint = getAlignPoint(popupRect, popupPoints);\n\n      // Real align info may not same as origin one\n      var nextAlignInfo = _objectSpread({}, placementInfo);\n\n      // Next Offset\n      var nextOffsetX = targetAlignPoint.x - popupAlignPoint.x + popupOffsetX;\n      var nextOffsetY = targetAlignPoint.y - popupAlignPoint.y + popupOffsetY;\n\n      // ============== Intersection ===============\n      // Get area by position. Used for check if flip area is better\n      function getIntersectionVisibleArea(offsetX, offsetY) {\n        var area = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : visibleArea;\n        var l = popupRect.x + offsetX;\n        var t = popupRect.y + offsetY;\n        var r = l + popupWidth;\n        var b = t + popupHeight;\n        var visibleL = Math.max(l, area.left);\n        var visibleT = Math.max(t, area.top);\n        var visibleR = Math.min(r, area.right);\n        var visibleB = Math.min(b, area.bottom);\n        return Math.max(0, (visibleR - visibleL) * (visibleB - visibleT));\n      }\n      var originIntersectionVisibleArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY);\n\n      // As `visibleFirst`, we prepare this for check\n      var originIntersectionRecommendArea = getIntersectionVisibleArea(nextOffsetX, nextOffsetY, visibleRegionArea);\n\n      // ========================== Overflow ===========================\n      var targetAlignPointTL = getAlignPoint(targetRect, ['t', 'l']);\n      var popupAlignPointTL = getAlignPoint(popupRect, ['t', 'l']);\n      var targetAlignPointBR = getAlignPoint(targetRect, ['b', 'r']);\n      var popupAlignPointBR = getAlignPoint(popupRect, ['b', 'r']);\n      var overflow = placementInfo.overflow || {};\n      var adjustX = overflow.adjustX,\n        adjustY = overflow.adjustY,\n        shiftX = overflow.shiftX,\n        shiftY = overflow.shiftY;\n      var supportAdjust = function supportAdjust(val) {\n        if (typeof val === 'boolean') {\n          return val;\n        }\n        return val >= 0;\n      };\n\n      // Prepare position\n      var nextPopupY;\n      var nextPopupBottom;\n      var nextPopupX;\n      var nextPopupRight;\n      function syncNextPopupPosition() {\n        nextPopupY = popupRect.y + nextOffsetY;\n        nextPopupBottom = nextPopupY + popupHeight;\n        nextPopupX = popupRect.x + nextOffsetX;\n        nextPopupRight = nextPopupX + popupWidth;\n      }\n      syncNextPopupPosition();\n\n      // >>>>>>>>>> Top & Bottom\n      var needAdjustY = supportAdjust(adjustY);\n      var sameTB = popupPoints[0] === targetPoints[0];\n\n      // Bottom to Top\n      if (needAdjustY && popupPoints[0] === 't' && (nextPopupBottom > adjustCheckVisibleArea.bottom || prevFlipRef.current.bt)) {\n        var tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          tmpNextOffsetY -= popupHeight - targetHeight;\n        } else {\n          tmpNextOffsetY = targetAlignPointTL.y - popupAlignPointBR.y - popupOffsetY;\n        }\n        var newVisibleArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY);\n        var newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        newVisibleArea > originIntersectionVisibleArea || newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.bt = true;\n          nextOffsetY = tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.bt = false;\n        }\n      }\n\n      // Top to Bottom\n      if (needAdjustY && popupPoints[0] === 'b' && (nextPopupY < adjustCheckVisibleArea.top || prevFlipRef.current.tb)) {\n        var _tmpNextOffsetY = nextOffsetY;\n        if (sameTB) {\n          _tmpNextOffsetY += popupHeight - targetHeight;\n        } else {\n          _tmpNextOffsetY = targetAlignPointBR.y - popupAlignPointTL.y - popupOffsetY;\n        }\n        var _newVisibleArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY);\n        var _newVisibleRecommendArea = getIntersectionVisibleArea(nextOffsetX, _tmpNextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea > originIntersectionVisibleArea || _newVisibleArea === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.tb = true;\n          nextOffsetY = _tmpNextOffsetY;\n          nextAlignInfo.points = [reversePoints(popupPoints, 0), reversePoints(targetPoints, 0)];\n        } else {\n          prevFlipRef.current.tb = false;\n        }\n      }\n\n      // >>>>>>>>>> Left & Right\n      var needAdjustX = supportAdjust(adjustX);\n\n      // >>>>> Flip\n      var sameLR = popupPoints[1] === targetPoints[1];\n\n      // Right to Left\n      if (needAdjustX && popupPoints[1] === 'l' && (nextPopupRight > adjustCheckVisibleArea.right || prevFlipRef.current.rl)) {\n        var tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          tmpNextOffsetX -= popupWidth - targetWidth;\n        } else {\n          tmpNextOffsetX = targetAlignPointTL.x - popupAlignPointBR.x - popupOffsetX;\n        }\n        var _newVisibleArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea2 = getIntersectionVisibleArea(tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea2 > originIntersectionVisibleArea || _newVisibleArea2 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea2 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.rl = true;\n          nextOffsetX = tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.rl = false;\n        }\n      }\n\n      // Left to Right\n      if (needAdjustX && popupPoints[1] === 'r' && (nextPopupX < adjustCheckVisibleArea.left || prevFlipRef.current.lr)) {\n        var _tmpNextOffsetX = nextOffsetX;\n        if (sameLR) {\n          _tmpNextOffsetX += popupWidth - targetWidth;\n        } else {\n          _tmpNextOffsetX = targetAlignPointBR.x - popupAlignPointTL.x - popupOffsetX;\n        }\n        var _newVisibleArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY);\n        var _newVisibleRecommendArea3 = getIntersectionVisibleArea(_tmpNextOffsetX, nextOffsetY, visibleRegionArea);\n        if (\n        // Of course use larger one\n        _newVisibleArea3 > originIntersectionVisibleArea || _newVisibleArea3 === originIntersectionVisibleArea && (!isVisibleFirst ||\n        // Choose recommend one\n        _newVisibleRecommendArea3 >= originIntersectionRecommendArea)) {\n          prevFlipRef.current.lr = true;\n          nextOffsetX = _tmpNextOffsetX;\n          nextAlignInfo.points = [reversePoints(popupPoints, 1), reversePoints(targetPoints, 1)];\n        } else {\n          prevFlipRef.current.lr = false;\n        }\n      }\n\n      // ============================ Shift ============================\n      syncNextPopupPosition();\n      var numShiftX = shiftX === true ? 0 : shiftX;\n      if (typeof numShiftX === 'number') {\n        // Left\n        if (nextPopupX < visibleRegionArea.left) {\n          nextOffsetX -= nextPopupX - visibleRegionArea.left;\n          if (targetRect.x + targetWidth < visibleRegionArea.left + numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.left + targetWidth - numShiftX;\n          }\n        }\n\n        // Right\n        if (nextPopupRight > visibleRegionArea.right) {\n          nextOffsetX -= nextPopupRight - visibleRegionArea.right;\n          if (targetRect.x > visibleRegionArea.right - numShiftX) {\n            nextOffsetX += targetRect.x - visibleRegionArea.right + numShiftX;\n          }\n        }\n      }\n      var numShiftY = shiftY === true ? 0 : shiftY;\n      if (typeof numShiftY === 'number') {\n        // Top\n        if (nextPopupY < visibleRegionArea.top) {\n          nextOffsetY -= nextPopupY - visibleRegionArea.top;\n          if (targetRect.y + targetHeight < visibleRegionArea.top + numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.top + targetHeight - numShiftY;\n          }\n        }\n\n        // Bottom\n        if (nextPopupBottom > visibleRegionArea.bottom) {\n          nextOffsetY -= nextPopupBottom - visibleRegionArea.bottom;\n          if (targetRect.y > visibleRegionArea.bottom - numShiftY) {\n            nextOffsetY += targetRect.y - visibleRegionArea.bottom + numShiftY;\n          }\n        }\n      }\n\n      // ============================ Arrow ============================\n      // Arrow center align\n      var popupLeft = popupRect.x + nextOffsetX;\n      var popupRight = popupLeft + popupWidth;\n      var popupTop = popupRect.y + nextOffsetY;\n      var popupBottom = popupTop + popupHeight;\n      var targetLeft = targetRect.x;\n      var targetRight = targetLeft + targetWidth;\n      var targetTop = targetRect.y;\n      var targetBottom = targetTop + targetHeight;\n      var maxLeft = Math.max(popupLeft, targetLeft);\n      var minRight = Math.min(popupRight, targetRight);\n      var xCenter = (maxLeft + minRight) / 2;\n      var nextArrowX = xCenter - popupLeft;\n      var maxTop = Math.max(popupTop, targetTop);\n      var minBottom = Math.min(popupBottom, targetBottom);\n      var yCenter = (maxTop + minBottom) / 2;\n      var nextArrowY = yCenter - popupTop;\n      onPopupAlign === null || onPopupAlign === void 0 ? void 0 : onPopupAlign(popupEle, nextAlignInfo);\n      setOffsetInfo({\n        ready: true,\n        offsetX: nextOffsetX / _scaleX,\n        offsetY: nextOffsetY / _scaleY,\n        arrowX: nextArrowX / _scaleX,\n        arrowY: nextArrowY / _scaleY,\n        scaleX: _scaleX,\n        scaleY: _scaleY,\n        align: nextAlignInfo\n      });\n    }\n  });\n  var triggerAlign = function triggerAlign() {\n    alignCountRef.current += 1;\n    var id = alignCountRef.current;\n\n    // Merge all align requirement into one frame\n    Promise.resolve().then(function () {\n      if (alignCountRef.current === id) {\n        onAlign();\n      }\n    });\n  };\n\n  // Reset ready status when placement & open changed\n  var resetReady = function resetReady() {\n    setOffsetInfo(function (ori) {\n      return _objectSpread(_objectSpread({}, ori), {}, {\n        ready: false\n      });\n    });\n  };\n  useLayoutEffect(resetReady, [placement]);\n  useLayoutEffect(function () {\n    if (!open) {\n      resetReady();\n    }\n  }, [open]);\n  return [offsetInfo.ready, offsetInfo.offsetX, offsetInfo.offsetY, offsetInfo.arrowX, offsetInfo.arrowY, offsetInfo.scaleX, offsetInfo.scaleY, offsetInfo.align, triggerAlign];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}